version: "3.7"
services:
  auth_db:
    image: postgres
    restart: always
    env_file:
      - .auth.env
    ports:
      - "5432"
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 2s
      timeout: 20s
      retries: 10
  dash_db:
    image: postgres
    restart: always
    env_file:
      - .dash.env
    ports:
      - "5433:5432"
    volumes:
      - dash_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 2s
      timeout: 20s
      retries: 10
  auth_server:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    env_file:
      - .auth.env
      - .common.env
    depends_on:
      auth_db:
          condition: service_healthy
    ports:
      - "8080"
  dash_server:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    env_file:
      - .dash.env
      - .common.env
    depends_on:
      dash_db:
          condition: service_healthy
    ports:
      - "8080"
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      auth_server:
        condition: service_started
      dash_server:
        condition: service_started
  redis:
    image: redis
    ports:
     - "6379"
    depends_on:
      dash_server:
        condition: service_started
volumes:
  data:
  dash_data: